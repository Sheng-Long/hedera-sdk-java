plugins {
	id "java-library"
	id "idea"
	id "com.google.protobuf" version "0.8.12"
}

group = "com.hedera.hashgraph"
version = "2.0.0-SNAPSHOT"
description = "Hederaâ„¢ Hashgraph SDK for Java"

configurations {
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
	// https://github.com/bsideup/jabel
	annotationProcessor 'com.github.bsideup.jabel:jabel-javac-plugin:0.2.0'

	// custom annotation processor to help generate methods around executables
	annotationProcessor project(":executable-processor")
	compileOnly project(":executable-annotation")

	// NOTE: BouncyCastle is frozen at v1.60 for compatibility with Corda <https://www.corda.net/>
	// <https://github.com/corda/corda/blob/2c10b6c3b9dace7831b5da73a065c3269a703d85/constants.properties#L23>
	implementation "org.bouncycastle:bcprov-jdk15on:1.65"

	// Protobuf Lite is used to maintain easy compatibility with Android
	// https://github.com/protocolbuffers/protobuf/blob/master/java/lite.md
	api "com.google.protobuf:protobuf-javalite:3.11.4"

	// https://mvnrepository.com/artifact/org.slf4j/slf4j-api
	implementation 'org.slf4j:slf4j-api:2.0.0-alpha1'

	implementation "io.grpc:grpc-api:1.29.0"
	implementation "io.grpc:grpc-protobuf-lite:1.29.0"
	implementation "io.grpc:grpc-stub:1.29.0"

	testImplementation "org.junit.jupiter:junit-jupiter-engine:5.6.1"
	testImplementation "org.junit.jupiter:junit-jupiter-params:5.6.1"

	testRuntimeOnly "org.slf4j:slf4j-simple:2.0.0-alpha1"

	integrationTestRuntimeOnly "io.grpc:grpc-netty-shaded:1.29.0"

	// NOTE: This is to support Android API < 24. Once it becomes acceptable to require API 24+ we can drop this and
	//       use CompletableFuture directly.
	// https://github.com/stefan-zobel/streamsupport
	// https://developer.android.com/about/dashboards/index.html
	// api "net.sourceforge.streamsupport:streamsupport:1.7.2"
	// api "net.sourceforge.streamsupport:streamsupport-cfuture:1.7.2"

	// NOTE: This is to support Android API < 26.
	// api "org.threeten:threetenbp:1.4.2"

	implementation "com.google.code.gson:gson:2.8.6"
}

// https://github.com/google/protobuf-gradle-plugin
protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:3.11.4"
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:1.29.0"
		}
	}
	generateProtoTasks {
		all().each { task ->
			task.builtins {
				java {
					option "lite"
				}
			}

			task.plugins {
				grpc {
					option "lite"
				}
			}
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	// https://github.com/gradle/gradle/issues/2510#issuecomment-604986414
	// release = 8
	compileJava {
		options.compilerArgs += [
			"--release",
			"8" // Avoid using Java 12 APIs
		]
	}
}

sourceSets {
	integrationTest {
		java.srcDir "$projectDir/src/integrationTest/java"

		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output
	}
}

idea {
	module {
		sourceDirs -= file("src/integrationTest/java")
		testSourceDirs += file("src/integrationTest/java")
	}
}

task integrationTest(type: Test) {
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
}

tasks.withType(Javadoc) {
	source = sourceSets.main.allJava + file("$buildDir/generated/sources/annotationProcessor/java/main")
}

tasks.withType(Test) {
	useJUnitPlatform()

	// NOTE: Uncomment to enable trace logs in the SDK during tests
	// jvmArgs "-Dorg.slf4j.simpleLogger.log.com.hedera.hashgraph=trace"

	// this task will fail on the first failed test
	failFast = true

	// maximum number of test processes
	maxParallelForks = Runtime.runtime.availableProcessors() / 2

	// maximum heap size for the process
	maxHeapSize = "1G"

	// emit logs per passed or failed test
	testLogging {
		exceptionFormat = 'full'
		events "passed", "skipped", "failed", "standardOut", "standardError"
	}
}

jar {
	exclude "**/*.proto"
	includeEmptyDirs = false
}
